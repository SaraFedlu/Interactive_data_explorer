{"version":3,"sources":["components/Login.js","components/DataUpload.js","components/DataExplorer.js","components/Visualization.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Login","username","setUsername","useState","password","setPassword","message","setMessage","React","createElement","className","onSubmit","async","e","preventDefault","response","axios","post","data","error","htmlFor","type","placeholder","value","onChange","target","DataUpload","file","setFile","files","onClick","formData","FormData","append","headers","Content-Type","DataExplorer","setData","useEffect","get","fetchData","JSON","stringify","Visualization","plotData","setPlotData","fetchVisualizationData","Plot","layout","Profile","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2fbe7081.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './login.css';\nimport axios from 'axios';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/user/login', { username, password });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage('Login failed. Please check your credentials.');\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n        <h1>Interactive Data Explorer</h1>\n        <h5>A Rich Dataset Visualization Tool</h5>\n        <div className=\"login-container\">\n            <h2>Login</h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter Username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        placeholder=\"Enter Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n                <button type=\"submit\" className=\"btn-login\">Login</button>\n                <p>{message}</p>\n            </form>\n        </div>\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport './login.css';\nimport axios from 'axios';\n\nconst DataUpload = () => {\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('/api/data/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage('File upload failed.');\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n        <h1>Interactive Data Explorer</h1>\n        <h5>A Rich Dataset Visualization Tool</h5>\n        <div className=\"file-upload-container\">\n        <input type=\"file\" onChange={handleFileChange} />\n        <button onClick={handleUpload}>Upload</button>\n        <p>{message}</p>\n        </div>\n    </div>\n  );\n};\n\nexport default DataUpload;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst DataExplorer = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get('/api/data/processed');\n      setData(response.data);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Data Explorer</h1>\n      {/* Display the data as needed */}\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default DataExplorer;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\n\nconst Visualization = () => {\n  const [plotData, setPlotData] = useState(null);\n\n  useEffect(() => {\n    const fetchVisualizationData = async () => {\n      const response = await axios.post('/api/visualization/render', { type: 'bar_chart', data: {} });\n      setPlotData(response.data);\n    };\n    fetchVisualizationData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Visualization</h1>\n      {plotData && (\n        <Plot\n          data={plotData.data}\n          layout={plotData.layout}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Visualization;","import React from 'react';\n\nconst Profile = () => {\n  return (\n    <div>\n      <h1>Profile</h1>\n      {/* Add profile management features here */}\n    </div>\n  );\n};\n\nexport default Profile;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './components/Login';\nimport DataUpload from './components/DataUpload';\nimport DataExplorer from './components/DataExplorer';\nimport Visualization from './components/Visualization';\nimport Profile from './components/Profile';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/upload\" element={<DataUpload />} />\n        <Route path=\"/explore\" element={<DataExplorer />} />\n        <Route path=\"/visualize\" element={<Visualization />} />\n        <Route path=\"/profile\" element={<Profile />} />\n        <Route path=\"/\" element={<Login />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}